//
// Code generated by grafana-app-sdk. DO NOT EDIT.
//

package v0alpha1

import (
	"fmt"

	"github.com/grafana/grafana-app-sdk/resource"
)

// schema is unexported to prevent accidental overwrites
var (
	schemaAlertRule = resource.NewSimpleSchema("rules.alerting.grafana.app", "v0alpha1", &AlertRule{}, &AlertRuleList{}, resource.WithKind("AlertRule"),
		resource.WithPlural("alertrules"), resource.WithScope(resource.NamespacedScope), resource.WithSelectableFields([]resource.SelectableField{resource.SelectableField{
			FieldSelector: "spec.title",
			FieldValueFunc: func(o resource.Object) (string, error) {
				cast, ok := o.(*AlertRule)
				if !ok {
					return "", fmt.Errorf("provided object must be of type *AlertRule")
				}
				return cast.Spec.Title, nil
			},
		},
		}))
	kindAlertRule = resource.Kind{
		Schema: schemaAlertRule,
		Codecs: map[resource.KindEncoding]resource.Codec{
			resource.KindEncodingJSON: &AlertRuleJSONCodec{},
		},
	}
)

// Kind returns a resource.Kind for this Schema with a JSON codec
func AlertRuleKind() resource.Kind {
	return kindAlertRule
}

// Schema returns a resource.SimpleSchema representation of AlertRule
func AlertRuleSchema() *resource.SimpleSchema {
	return schemaAlertRule
}

// Interface compliance checks
var _ resource.Schema = kindAlertRule
